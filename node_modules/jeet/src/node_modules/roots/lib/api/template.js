// Generated by CoffeeScript 1.7.0
(function() {
  var W, fs, global_config, remove_roots_config, sprout, _;

  sprout = require('sprout');

  _ = require('lodash');

  W = require('when');

  global_config = require('../global_config');

  fs = require('fs');

  exports.add = sprout.add.bind(sprout);

  exports.remove = sprout.remove;

  exports.list = sprout.list;

  exports["default"] = function(name) {
    var config;
    if (!name) {
      return W.reject('please provide a template name');
    }
    if (!_.contains(sprout.list(), name)) {
      return W.reject("you do not have this template installed\n=> try `roots tpl add " + name + " <url>`");
    }
    config = global_config();
    config.set('default_template', name);
    return W.resolve("default template set to " + name);
  };

  exports.reset = function(override) {
    var deferred;
    deferred = W.defer();
    if (!override) {
      process.stdout.write('are you sure? (y/n) '.yellow);
      process.stdin.resume();
      process.stdin.setEncoding('utf8');
      process.stdin.on('data', function(txt) {
        process.stdin.pause();
        txt = txt.trim();
        if (txt === 'y' || txt === 'Y') {
          return remove_roots_config(deferred);
        }
        return deferred.reject('reset cancelled');
      });
    } else {
      remove_roots_config(deferred);
    }
    return deferred.promise;
  };

  remove_roots_config = function(deferred) {
    var tasks, tpl, _i, _len, _ref;
    tasks = [];
    _ref = _.without(sprout.list(), 'roots-base');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      tpl = _ref[_i];
      tasks.push(sprout.remove(tpl));
    }
    return W.all(tasks).then(function() {
      return fs.unlinkSync(global_config().path);
    })["yield"]('config and templates reset').done(deferred.resolve, deferred.reject);
  };

}).call(this);
