// Generated by CoffeeScript 1.7.0
(function() {
  var Base, Remove, W, fs, nodefn, rimraf,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  fs = require('fs');

  W = require('when');

  rimraf = require('rimraf');

  Base = require('../base');

  nodefn = require('when/node/function');

  Remove = (function(_super) {
    __extends(Remove, _super);

    function Remove() {
      Remove.__super__.constructor.apply(this, arguments);
    }

    Remove.prototype.execute = function(opts) {
      if (!fs.existsSync(this.path(opts.name))) {
        return W.reject("template " + opts.name + " does not exist");
      }
      return nodefn.call(rimraf, this.path(opts.name))["yield"]("template '" + opts.name + "' removed");
    };

    return Remove;

  })(Base);

  module.exports = function(opts) {
    return (new Remove()).execute(opts);
  };

}).call(this);
