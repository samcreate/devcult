mobile-cutoff = 400px
desktop-cutoff = 1050px

scale = 0 mobile-cutoff 600px 800px desktop-cutoff

-on-scale(n)
  return unit(n) is ''

-larger-than-scale(n)
  return (n > (length(scale) - 1)) and -on-scale(n)

-is-zero(n)
  return n is 0

// override display property with mixin so that "block" keyword works again
// fixes maximum call stack error when dealing with display: block
display()
  if arguments[0] is 'block'
    display: unquote('block')
  else
    display: arguments

// +between(min, max)
// usage (scale can be mixed with custom values):
//   - +between(1, 3) scale:scale
//   - +between(0, 3) 0 width:scale
//   - +between(200px, 500px) custom:custom
//   - +between(0, 300px) 0 width:custom
//   - +between(1, 300px) scale:custom
//   - +between(200px, 4) custom:scale

between(min, max)
  if (-on-scale(min)) and (-on-scale(max))
    -min = -is-zero(min) ? 0 : scale[min - 1]
    -max = scale[max]
  else if (-on-scale(min)) and (not -on-scale(max))
    -min = -is-zero(min) ? 0 : scale[min - 1]
    -max = max
  else if (not -on-scale(min)) and (-on-scale(max))
    -min = min
    -max = scale[max]
  else
    -min = min
    -max = max
  if -min is not 0
    condition = 'only screen and (min-width: %s)' % (-min)
  else
    condition = 'only screen'
  unless -larger-than-scale(max)
    condition = condition + ' and (max-width: %s)' % (-max)
  @media condition
    {block}

at(scale-point)
  +between(scale-point, scale-point)
    {block}

from(scale-point)
  +between(scale-point, length(scale))
    {block}

above = from

to(scale-point)
  +between(1, scale-point)
    {block}

below = to

mobile()
  +below(mobile-cutoff)
    {block}

tablet()
  +between(mobile-cutoff, desktop-cutoff)
    {block}

desktop()
  +above(desktop-cutoff)
    {block}

retina()
  @media (min-resolution: 1.5dppx), (-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (min-resolution: 144dpi)
    {block}
